name: Publish Coder Template

on:
  push:
    branches: [ main ]
    paths:
      - 'coder/templates/**'

  workflow_dispatch:
    inputs:
      since:
        description: "Oldest commit SHA to compare against for changed templates. Defaults to the last commit on the main branch."
        required: true
        default: "HEAD"
        type: string

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed Coder templates
        id: changes
        run: |
          # For push events, only include changed template folders
          {
            echo "TEMPLATES<<EOF"
            git diff --name-only ${{ inputs.since || github.event.commits[0].id }}~1 ${{ github.sha }} -- coder/templates | xargs ls -d 2>/dev/null | sed -r 's/^coder\/templates\/([^\/]+).*$/\1/' | sort | uniq
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Get latest commit title to use as template version description
        id: message
        run:
          echo "pr_message=$(git log --format=%s -n 1 ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Define matrix based on changed templates
        id: matrix
        run: |
          if [ -n "$TEMPLATES" ]; then
            echo "templates=$(echo "$TEMPLATES" | jq -c -R -s 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT
          else
            echo "templates=[]" >> $GITHUB_OUTPUT
          fi

      - name: Upload Coder templates
        uses: actions/upload-artifact@v4
        with:
          name: templates
          path: coder/templates
    
    outputs:
      version_message: ${{ steps.message.outputs.pr_message }}
      templates: ${{ steps.matrix.outputs.templates }}

  publish:
    runs-on: kyrion
    needs: init
    if: needs.init.outputs.templates != '[]'
    strategy:
      fail-fast: false
      matrix:
        template: ${{ fromJSON(needs.init.outputs.templates) }}

    steps:
      - name: Download Coder templates
        uses: actions/download-artifact@v4
        with:
          name: templates

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Set up terraform
        uses: hashicorp/setup-terraform@v3

      - name: Set up Coder CLI
        uses: coder/setup-action@v1
        with:
          access_url: "http://coder.coder.svc"
          coder_session_token: ${{ secrets.CODER_SESSION_TOKEN }}

      - name: Validate Terraform template
        run: |
          terraform init -input=false -backend=false
          terraform validate -no-color
        working-directory: ./${{ matrix.template }}

      - name: Push template to Coder
        run: |
          coder templates push ${{ matrix.template }} -d ${{ matrix.template }} --message "${{ needs.init.outputs.version_message }}" --yes

      - name: Extract README frontmatter
        id: frontmatter
        uses: mheap/markdown-meta-action@v1
        with:
          file: ./${{ matrix.template }}/README.md

      - name: Set template display name
        if: steps.frontmatter.outputs.displayname != ''
        run: 
          coder templates edit ${{ matrix.template }} --display-name "${{ steps.frontmatter.outputs.displayname }}"

      - name: Set template description
        if: steps.frontmatter.outputs.description != ''
        run: 
          coder templates edit ${{ matrix.template }} --description "${{ steps.frontmatter.outputs.description }}"
      
      - name: Set template icon
        if: steps.frontmatter.outputs.icon != ''
        run: 
            coder templates edit ${{ matrix.template }} --icon "${{ steps.frontmatter.outputs.icon }}"
