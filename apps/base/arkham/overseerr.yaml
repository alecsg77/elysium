apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: overseerr
  namespace: arkham
spec:
  releaseName: overseerr
  chart:
    spec:
      chart: onechart
      sourceRef:
        kind: HelmRepository
        name: onechart
        namespace: flux-system
  interval: 10m
  values:
    image:
      repository: lscr.io/linuxserver/overseerr # {"$imagepolicy": "flux-system:overseerr-policy:name"}
      tag: "version-v1.33.2" # {"$imagepolicy": "flux-system:overseerr-policy:tag"}
    vars:
      PUID: ${PUID:=1000}
      PGID: ${PGID:=1000}
      TZ: ${TZ:=Etc/UTC}
    volumes:
      - name: config
        size: "100Mi"
        path: /config
        subPath: overseerr/config
        existingClaim: pvc-storage
    containerPort: 5055
    probe:
      enabled: true
      path: /api/v1/status
      settings:
        initialDelaySeconds: 30
        timeoutSeconds: 5
    livenessProbe:
      enabled: true
      path: /api/v1/status
      settings:
        initialDelaySeconds: 30
        timeoutSeconds: 10
    ingress:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: letsencrypt
      tlsEnabled: true
      host: home.${DOMAIN}
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: overseerr
  namespace: flux-system
spec:
  image: lscr.io/linuxserver/overseerr
  interval: 12h
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: overseerr-policy
  namespace: flux-system
spec:
  imageRepositoryRef:
    name: overseerr
  filterTags:
    pattern: '^version-v(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)$'
    extract: "$major.$minor.$patch"
  policy:
    semver:
      range: 1.x
